# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//src/sys/build/components.gni")

###############################################################################
# EXECUTABLES
###############################################################################
executable("bugreport_integration_test_exe") {
  testonly = true

  sources = [ "bug_reporter_integration_test.cc" ]

  deps = [
    "//sdk/fidl/fuchsia.mem",
    "//src/developer/feedback/bugreport:src",
    "//src/developer/forensics/utils:archive",
    "//src/lib/files",
    "//src/lib/fsl",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gtest",
  ]
}

executable("bugreport_unittest_exe") {
  testonly = true

  sources = [ "bug_reporter_unittest.cc" ]

  deps = [
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/sys/cpp/testing:unit",
    "//sdk/lib/syslog/cpp",
    "//src/developer/feedback/bugreport:src",
    "//src/developer/forensics/testing/stubs:data_provider",
    "//src/lib/files",
    "//src/lib/fsl",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/loop_fixture",
    "//third_party/googletest:gtest",
    "//zircon/public/lib/zx",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
  ]
}

executable("command_line_options_unittest_exe") {
  testonly = true

  sources = [ "command_line_options_unittest.cc" ]

  deps = [
    "//src/developer/feedback/bugreport:command_line_options",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gtest",
  ]
}

###############################################################################
# COMPONENTS
###############################################################################
fuchsia_component("bugreport_integration_test") {
  testonly = true

  manifest = "meta/bugreport_integration_test.cmx"

  deps = [ ":bugreport_integration_test_exe" ]
}

fuchsia_component("bugreport_unittest") {
  testonly = true

  manifest = "meta/bugreport_unittest.cmx"

  deps = [ ":bugreport_unittest_exe" ]
}

fuchsia_component("command_line_options_unittest") {
  testonly = true

  manifest = "meta/command_line_options_unittest.cmx"

  deps = [ ":command_line_options_unittest_exe" ]
}

###############################################################################
# PACKAGES
###############################################################################
fuchsia_test_package("bugreport-tests") {
  test_components = [
    ":bugreport_integration_test",
    ":bugreport_unittest",
    ":command_line_options_unittest",
  ]
}

###############################################################################
# GROUPS
###############################################################################
group("tests") {
  testonly = true

  deps = [
    ":bugreport-tests",

    # Packages for the components that we are injecting in the integration tests.
    "//src/developer/forensics/testing/fakes:fake-data-provider",
  ]
}
