# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//src/sys/build/components.gni")

###############################################################################
# PACKAGES
###############################################################################
fuchsia_package("last-reboot") {
  deps = [ ":last_reboot" ]
}

###############################################################################
# COMPONENTS
###############################################################################
fuchsia_component("last_reboot") {
  manifest = "meta/last_reboot.cmx"

  deps = [ ":main" ]
}

###############################################################################
# EXECUTABLES
###############################################################################
executable("main") {
  output_name = "last_reboot"

  sources = [ "main.cc" ]

  deps = [
    ":main_service",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/sys/inspect/cpp",
    "//sdk/lib/syslog/cpp",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/fit",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
  ]
}

###############################################################################
# SOURCES
###############################################################################
source_set("last_reboot_info_provider") {
  sources = [
    "last_reboot_info_provider.cc",
    "last_reboot_info_provider.h",
  ]

  public_deps = [
    ":reboot_log",
    "//sdk/fidl/fuchsia.feedback",
  ]

  deps = [
    ":reboot_reason",
    "//sdk/lib/syslog/cpp",
  ]
}

source_set("main_service") {
  sources = [
    "main_service.cc",
    "main_service.h",
  ]

  public_deps = [
    ":last_reboot_info_provider",
    ":reboot_log",
    ":reboot_watcher",
    ":reporter",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/inspect/cpp",
    "//src/developer/forensics/utils:inspect_node_manager",
    "//src/developer/forensics/utils:inspect_protocol_stats",
    "//src/developer/forensics/utils/cobalt",
  ]
}

source_set("reboot_log") {
  sources = [
    "reboot_log.cc",
    "reboot_log.h",
  ]

  public_deps = [ ":reboot_reason" ]

  deps = [
    "//sdk/lib/syslog/cpp",
    "//src/lib/files",
    "//src/lib/fxl",
  ]
}

source_set("reboot_reason") {
  sources = [
    "reboot_reason.cc",
    "reboot_reason.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.feedback",
    "//src/developer/forensics/utils/cobalt",
  ]

  deps = [ "//sdk/lib/syslog/cpp" ]

  visibility = [ "//src/developer/forensics/last_reboot/*" ]
}

source_set("reboot_watcher") {
  sources = [
    "reboot_watcher.cc",
    "reboot_watcher.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.hardware.power.statecontrol",
    "//sdk/lib/fidl/cpp",
    "//src/developer/forensics/utils/cobalt",
  ]

  deps = [
    "//src/lib/files",
    "//src/lib/fxl",
  ]
}

source_set("reporter") {
  sources = [
    "reporter.cc",
    "reporter.h",
  ]

  public_deps = [
    ":reboot_log",
    ":reboot_reason",
    "//sdk/fidl/fuchsia.cobalt",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/sys/cpp",
    "//src/developer/forensics/utils:errors",
    "//src/developer/forensics/utils/cobalt",
    "//src/developer/forensics/utils/fidl:oneshot_ptr",
    "//zircon/public/lib/fit",
  ]

  deps = [
    "//sdk/lib/syslog/cpp",
    "//src/lib/files",
    "//src/lib/fsl",
    "//src/lib/fxl",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/zx",
  ]
}
