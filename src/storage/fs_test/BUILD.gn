# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/test.gni")
import("//src/sys/build/fuchsia_component.gni")
import("//src/sys/build/fuchsia_test_package.gni")

group("tests") {
  testonly = true
  deps = [
    ":fs-tests",
    "//src/lib/isolated_devmgr/v2_component",
  ]
}

group("large_tests") {
  testonly = true
  deps = [
    ":large-fs-tests",
    "//src/lib/isolated_devmgr/v2_component",
  ]
}

shared_library("fs_test") {
  output_name = "fs_test"
  testonly = true
  sources = [
    "fs_test.cc",
    "fs_test_fixture.cc",
    "misc.cc",
  ]
  deps = [
    "//sdk/fidl/fuchsia.minfs:fuchsia.minfs_c",
    "//sdk/lib/fdio",
    "//sdk/lib/fdio",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/syslog/cpp",
    "//src/lib/isolated_devmgr/v2_component:client",
    "//src/storage/bin/minfs",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/block-client",
    "//zircon/system/ulib/fdio-caller",
    "//zircon/system/ulib/fvm",
    "//zircon/system/ulib/memfs",
  ]
  public_deps = [
    "//third_party/googletest:gtest",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/zx",
    "//zircon/public/lib/zxc",
    "//zircon/system/ulib/fs-management",
  ]
}

test("access_tests") {
  sources = [ "access.cc" ]
  deps = [
    ":fs_test",
    "//sdk/fidl/fuchsia.io:fuchsia.io_llcpp",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/system/ulib/fdio-caller",
  ]
}

fuchsia_component("access-tests") {
  testonly = true
  manifest = "$target_gen_dir/access-tests.cml"
  deps = [
    ":access_tests",
    ":manifests",
  ]
}

test("append_tests") {
  sources = [ "append.cc" ]
  deps = [
    ":fs_test",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/fbl",
  ]
}

fuchsia_component("append-tests") {
  testonly = true
  manifest = "$target_gen_dir/append-tests.cml"
  deps = [
    ":append_tests",
    ":manifests",
  ]
}

test("attr_tests") {
  sources = [ "attr.cc" ]
  deps = [
    ":fs_test",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/fbl",
  ]
}

fuchsia_component("attr-tests") {
  testonly = true
  manifest = "$target_gen_dir/attr-tests.cml"
  deps = [
    ":attr_tests",
    ":manifests",
  ]
}

test("basic_tests") {
  sources = [ "basic.cc" ]
  deps = [
    ":fs_test",
    "//src/lib/fxl/test:gtest_main",
  ]
}

fuchsia_component("basic-tests") {
  testonly = true
  manifest = "$target_gen_dir/basic-tests.cml"
  deps = [
    ":basic_tests",
    ":manifests",
  ]
}

test("clone_tests") {
  sources = [ "clone.cc" ]
  deps = [
    ":fs_test",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/fbl",
  ]
}

fuchsia_component("clone-tests") {
  testonly = true
  manifest = "$target_gen_dir/clone-tests.cml"
  deps = [
    ":clone_tests",
    ":manifests",
  ]
}

test("directory_tests") {
  sources = [ "directory.cc" ]
  deps = [
    ":fs_test",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/fbl",
  ]
}

fuchsia_component("directory-tests") {
  testonly = true
  manifest = "$target_gen_dir/directory-tests.cml"
  deps = [
    ":directory_tests",
    ":manifests",
  ]
}

test("dot_dot_tests") {
  sources = [ "dot_dot.cc" ]
  deps = [
    ":fs_test",
    "//src/lib/fxl/test:gtest_main",
  ]
}

fuchsia_component("dot-dot-tests") {
  testonly = true
  manifest = "$target_gen_dir/dot-dot-tests.cml"
  deps = [
    ":dot_dot_tests",
    ":manifests",
  ]
}

test("fcntl_tests") {
  sources = [ "fcntl.cc" ]
  deps = [
    ":fs_test",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/fbl",
  ]
}

fuchsia_component("fcntl-tests") {
  testonly = true
  manifest = "$target_gen_dir/fcntl-tests.cml"
  deps = [
    ":fcntl_tests",
    ":manifests",
  ]
}

test("link_tests") {
  sources = [ "link.cc" ]
  deps = [
    ":fs_test",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/fbl",
  ]
}

fuchsia_component("link-tests") {
  testonly = true
  manifest = "$target_gen_dir/link-tests.cml"
  deps = [
    ":link_tests",
    ":manifests",
  ]
}

test("overflow_tests") {
  sources = [ "overflow.cc" ]
  deps = [
    ":fs_test",
    "//src/lib/fxl/test:gtest_main",
  ]
}

fuchsia_component("overflow-tests") {
  testonly = true
  manifest = "$target_gen_dir/overflow-tests.cml"
  deps = [
    ":manifests",
    ":overflow_tests",
  ]
}

test("read_write_tests") {
  sources = [ "read_write.cc" ]
  deps = [
    ":fs_test",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/fbl",
  ]
}

fuchsia_component("read-write-tests") {
  testonly = true
  manifest = "$target_gen_dir/read-write-tests.cml"
  deps = [
    ":manifests",
    ":read_write_tests",
  ]
}

fuchsia_test_package("fs-tests") {
  test_components = [
    ":access-tests",
    ":append-tests",
    ":attr-tests",
    ":basic-tests",
    ":clone-tests",
    ":directory-tests",
    ":dot-dot-tests",
    ":fcntl-tests",
    ":link-tests",
    ":overflow-tests",
    ":read-write-tests",
  ]
}

test("max_file_tests") {
  sources = [ "max_file.cc" ]
  deps = [
    ":fs_test",
    "//sdk/lib/syslog/cpp",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/fbl",
  ]
}

fuchsia_component("max-file-tests") {
  testonly = true
  manifest = "$target_gen_dir/max-file-tests.cml"
  deps = [
    ":manifests",
    ":max_file_tests",
  ]
}

fuchsia_test_package("large-fs-tests") {
  test_components = [ ":max-file-tests" ]
}

action("manifests") {
  script = "generate_manifests.py"
  sources = [ "meta/fs_tests.cml" ]
  outputs = [
    "$target_gen_dir/access-tests.cml",
    "$target_gen_dir/append-tests.cml",
    "$target_gen_dir/attr-tests.cml",
    "$target_gen_dir/basic-tests.cml",
    "$target_gen_dir/clone-tests.cml",
    "$target_gen_dir/directory-tests.cml",
    "$target_gen_dir/dot-dot-tests.cml",
    "$target_gen_dir/fcntl-tests.cml",
    "$target_gen_dir/link-tests.cml",
    "$target_gen_dir/max-file-tests.cml",
    "$target_gen_dir/overflow-tests.cml",
    "$target_gen_dir/read-write-tests.cml",
  ]
  args = rebase_path(sources, root_build_dir) +
         rebase_path(outputs, root_build_dir)
}
