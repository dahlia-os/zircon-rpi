# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/rustc_library.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")

rustc_library("serial_link") {
  with_unit_tests = true
  edition = "2018"
  deps = [
    "//sdk/fidl/fuchsia.hardware.serial:fuchsia.hardware.serial-rustc",
    "//sdk/fidl/fuchsia.overnet.protocol:fuchsia.overnet.protocol-rustc",
    "//src/connectivity/overnet/lib/core",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:base64",
    "//third_party/rust_crates:byteorder",
    "//third_party/rust_crates:crc",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:log",
    "//third_party/rust_crates:rand",
    "//third_party/rust_crates:thiserror",
  ]
  if (is_fuchsia) {
    deps += []
  } else {
    deps += [ "//third_party/rust_crates:async-std" ]
  }
}

test_package("overnet-serial-link-tests") {
  deps = [ ":serial_link_test" ]

  tests = [
    {
      name = "serial_link_lib_test"
      environments = basic_envs
    },
  ]

  resources = [
    {
      path = rebase_path("//third_party/rust-mirrors/quiche/examples/cert.crt")
      dest = "cert.crt"
    },
    {
      path = rebase_path("//third_party/rust-mirrors/quiche/examples/cert.key")
      dest = "cert.key"
    },
    {
      path =
          rebase_path("//third_party/rust-mirrors/quiche/examples/rootca.crt")
      dest = "root.crt"
    },
  ]
}

group("tests") {
  testonly = true
  deps = [
    ":overnet-serial-link-tests",
    ":serial_link_test($host_toolchain)",
  ]
}
